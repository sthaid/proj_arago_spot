>>> x = np.fft.fftfreq(10,1)
>>> x
array([ 0. ,  0.1,  0.2,  0.3,  0.4, -0.5, -0.4, -0.3, -0.2, -0.1])
>>> x
array([ 0. ,  0.1,  0.2,  0.3,  0.4, -0.5, -0.4, -0.3, -0.2, -0.1])
>>> y = np.fft.fftshift(x)
>>> y
array([-0.5, -0.4, -0.3, -0.2, -0.1,  0. ,  0.1,  0.2,  0.3,  0.4])

======================================
REFERENCES
======================================

https://en.wikipedia.org/wiki/Arago_spot
https://en.wikipedia.org/wiki/Fresnel_number
https://en.wikipedia.org/wiki/Angular_spectrum_method

https://vanderbei.princeton.edu/images/Questar/IMG_2068_medium.jpg

diameter-of-circular-object  > sqrt(L & wvlen)
- example:
      wvlen     L       D must be greater than ...
    --------   ----   -----------------------------
    500e-9      1       .0007     .7 mm
    500e-9      2       .001      1  mm
    500e-9      10      .0022     2.2 mm

======================================
LENSES
======================================

https://www.newport.com/medias/sys_master/images/images/he7/h44/8797226237982/Optics-How-to-Build-a-Beam-Expander.pdf

purchased convex lenses with focal lenghts (mm)
  200, 300, 500    2"
  50               1.5"
  1000             3"

concave lenses with focal length (mm)
  50

Magnifications possible, using the 50 mm:
  x 4, 6, 10, 20
assuming beam width is 1.5 mm, the resulting beam width would be
  6,  9,  15,  30 mm

Lens sources:
- amazon search "optical lens"
- https://www.amazon.com/Eisco-Piece-Premium-Optical-Diameter/dp/B00BIKGMZ8/ref=sr_1_6?crid=38FBL19ZTMK36&keywords=glass+lenses&qid=1640535640&sprefix=glass+lenses%2Caps%2C73&sr=8-6
- https://www.amazon.com/Eisco-Labs-Glass-Lenses-Diameter/dp/B01F9KXRX2/ref=sr_1_1?crid=3UJSMROI94171&keywords=optical+lens+focal+length&qid=1640536540&sprefix=optical+lens+focal+length%2Caps%2C94&sr=8-1
- https://www.amazon.com/stores/page/94A5E468-48F2-46AC-9BE2-0812C13EA480?ingress=2&visitId=3b1da7cb-43a2-4c31-afed-97df76e2f9e2&ref_=ast_bln

======================================
LASER POINTER MOUNT
======================================

Purchased, 

https://www.ebay.com/itm/233715908728?_trkparms=amclksrc%3DITM%26aid%3D1110006%26algo%3DHOMESPLICE.SIM%26ao%3D1%26asc%3D20200818143230%26meid%3Df2f8332e46904032b31be1627a28167e%26pid%3D101224%26rk%3D1%26rkt%3D5%26sd%3D403333314223%26itm%3D233715908728%26pmt%3D1%26noa%3D1%26pg%3D2047675%26algv%3DDefaultOrganicWeb&_trksid=p2047675.c101224.m-1

======================================
OBSTACLE ...
======================================

Some reference sites for obstacles:
https://www.amazon.com/Star-Diameter-Plastic-Bulletin-boards%EF%BC%88Black%EF%BC%89/dp/B06W56RVT3?ref=dp_atch_dss_sdp_ce&smid=A7YJ5QP9UOEY5_3#

======================================
SIMULATION  
======================================

search 
- angular spectrum method
- angular spectrum method "propagation term"

https://en.wikipedia.org/wiki/Angular_spectrum_method
https://www.egr.msu.edu/~fultras-web/background/asa.php
  pg 3

http://www.fftw.org/fftw3.pdf

https://rafael-fuente.github.io/simulating-diffraction-patterns-with-the-angular-spectrum-method-and-python.html

https://en.wikipedia.org/wiki/Angular_spectrum_method
https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.674.3630&rep=rep1&type=pdf
https://rafael-fuente.github.io/simulating-diffraction-patterns-with-the-angular-spectrum-method-and-python.html
https://github.com:rafael-fuente/diffractsim

